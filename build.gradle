/*
 * Copyright (C) 2016 Ryan Dancy
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations under the License.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'ca.keal.sastrane'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'idea'

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    provided
}

dependencies {
    provided 'org.projectlombok:lombok:1.16.8'
    provided 'com.google.code.findbugs:findbugs-annotations:3.0.1'
    provided 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.inject:guice:3.0.0'
    compile 'com.google.inject.extensions:guice-multibindings:3.0.0'
    compile 'com.google.inject.extensions:guice-assistedinject:3.0.0'
    compile 'com.cathive.fx:fx-guice:8.0.0'
    compile 'org.aeonbits.owner:owner:1.0.9'
    testCompile 'org.testng:testng:6.8'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

//noinspection GrUnresolvedAccess
sourceSets.main.compileClasspath += [configurations.provided]

idea {
    module {
        //noinspection GrUnresolvedAccess
        scopes.PROVIDED.plus += [configurations.provided]
    }
    // https://discuss.gradle.org/t/the-idea-plugin-breaks-the-new-intellij-13-iml-configuration/2456/13
    module.iml.withXml {
        def testAtts = it.asNode().component.content.sourceFolder.find {
            it.@url == 'file://$MODULE_DIR$/src/test/resources'
        }.attributes()
        testAtts.remove('isTestSource')
        testAtts.put('type', 'java-test-resource')
        
        def atts = it.asNode().component.content.sourceFolder.find {
            it.@url == 'file://$MODULE_DIR$/src/main/resources'
        }.attributes()
        atts.remove('isTestSource')
        atts.put('type', 'java-resource')
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'ca.keal.sastrane.main.Main'
    }
}

shadowJar {
    classifier = null
}